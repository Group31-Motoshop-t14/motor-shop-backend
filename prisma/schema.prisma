// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Fuel {
  FLEX
  HIBRIDO
  ELETRICO 
}

model Users {
  id            String    @id @default(uuid())
  name          String    @db.VarChar(120)
  email         String    @db.VarChar(120)@unique
  password      String    @db.VarChar(120)
  cpf           String    @db.VarChar(11) @unique
  phone         String    @db.VarChar(13)
  birth_date    DateTime
  description   String
  is_advertiser Boolean   @default(false)
  addressId     String    @unique
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime  @default(now())
  address       Address?
  car           Cars[]
  cars          Comment[]

  @@map("users")
}

model Address {
  id         String   @id @default(uuid())
  zip_code   String   @db.VarChar(8)
  state      String   @db.VarChar(2)
  city       String   @db.VarChar(100)
  street     String   @db.VarChar(100)
  number     String   @db.VarChar(50)
  complement String?  @db.VarChar(100)
  user       Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String   @unique

  @@map("addresses")
}

model Cars {
  id           String   @id @default(uuid())
  brand        String   @db.VarChar(150)
  model        String   @db.VarChar(150)
  year         String   @db.VarChar(4)
  fuel_type    Fuel
  mileage      Int      @db.Integer()
  color        String   @db.VarChar(150)
  fipe_price   Float 
  price        Float
  description  String   @db.Text()
  created_at   DateTime @default(now())
  is_published Boolean  @default(false)
  cover_image  String   @db.Text()
  user         Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String     
  users        Comment[]
  carImages    CarImages[]

  @@map("cars")
}

model Comment {
  content String @db.Text()
  user    Users  @relation(fields: [userId], references: [id])
  userId  String
  car     Cars   @relation(fields: [carId], references: [id])
  carId   String 
  created_at DateTime 

  @@id([userId, carId])
  @@map("comments")
}

model CarImages {
  id    BigInt @id
  url   String @db.Text()
  car   Cars   @relation(fields: [carId], references: [id])
  carId String 

  @@map("car_images")
}
